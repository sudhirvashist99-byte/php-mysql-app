pipeline {
    agent { label 'BhServer' }

    environment {
        SSL_DIR = "${WORKSPACE}/nginx/ssl"
        DOCKER_COMPOSE_DIR = "${WORKSPACE}"
    }

    stages {
        stage('Cleanup Old Docker Data') {
            steps {
                echo 'üßπ Cleaning up old Docker containers, images, networks, and volumes...'
                sh '''
                    # Stop and remove all containers
                    docker ps -aq | xargs -r docker stop
                    docker ps -aq | xargs -r docker rm

                    # Remove dangling images
                    docker image prune -af

                    # Remove all unused images, networks, and volumes
                    docker system prune -af --volumes
                '''
                echo '‚úÖ Docker cleanup complete.'
            }
        }

        stage('Code Clone') {
            steps {
                git url: "https://github.com/sudhirvashist99-byte/php-mysql-app.git", branch: "main"
                echo '‚úÖ Code cloned from Git successfully.'
            }
        }

        stage('Generate SSL Certificate') {
            steps {
                sh '''
                    mkdir -p ${SSL_DIR}
                    cd ${SSL_DIR}
                    echo "Generating self-signed certificate..."
                    openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
                        -keyout selfsigned.key \
                        -out selfsigned.crt \
                        -subj "/C=US/ST=None/L=None/O=Jenkins-CI/CN=$(hostname -I | awk '{print $1}')"
                    echo "Certificate generated successfully:"
                    ls -l ${SSL_DIR}
                '''
            }
        }

        stage('Copy Certificate to Nginx Path') {
            steps {
                sh '''
                    echo "Copying SSL certificate into Nginx directory..."
                    mkdir -p ${DOCKER_COMPOSE_DIR}/nginx/ssl
                    cp -f ${SSL_DIR}/selfsigned.key ${DOCKER_COMPOSE_DIR}/nginx/ssl/
                    cp -f ${SSL_DIR}/selfsigned.crt ${DOCKER_COMPOSE_DIR}/nginx/ssl/
                '''
            }
        }

        stage('Reload Nginx Container') {
            steps {
                sh '''
                    echo "Reloading Nginx container..."
                    cd ${DOCKER_COMPOSE_DIR}
                    docker compose exec nginx nginx -s reload || docker compose restart nginx
                    echo "Nginx reloaded successfully!"
                '''
            }
        }

        stage('Build') {
            steps {
                sh "cd ${DOCKER_COMPOSE_DIR} && docker compose build"
                echo "‚úÖ Docker build created successfully on remote server."
            }
        }

        stage('Test') {
            steps {
                echo 'üß™ Running tests...'
                // Add test commands here if needed
            }
        }

        stage('Push Image to Docker') {
            steps {
                echo 'üì¶ Pushing Docker image...'
                // Add Docker push commands here if needed
            }
        }

        stage('Deploy') {
            steps {
                sh '''
                    cd ${DOCKER_COMPOSE_DIR}
                    docker compose down
                    docker compose up -d
                '''
                echo "üöÄ Docker deployment completed successfully on remote server."
            }
        }
    }

    post {
        success {
            echo "‚úÖ SSL certificate created and Nginx reloaded successfully."
        }
        failure {
            echo "‚ùå SSL certificate automation failed. Check logs."
        }
    }
}